import { sendEmail } from '../services/emailService.js';
import { updateScanStatus } from '../services/metadataService.js';
import { scanFile } from '../services/clamavService.js';
import { moveToQuarantine } from '../services/fileService.js';

export async function handleScanResult(fileName, sasUrl, fileSize, email, userName) {
  console.log(`Starting scan for file: ${fileName}`);

  try {
    // Step 1: Use the SAS URL directly for scanning
    const scanResult = await scanFile(sasUrl);
    console.log(`Scan result for ${fileName}: ${scanResult}`);

    // Step 2: Update metadata based on scan result
    const status = scanResult.includes('No viruses detected') ? 'Clean' : 'Malware Detected';
    await updateScanStatus(fileName, status, fileSize);

    // Step 3: Handle the scan result
    if (status === 'Malware Detected') {
      await moveToQuarantine(sasUrl, fileName);
      const quarantineMessage = process.env.NODE_ENV === 'production'
        ? 'Your file has been flagged as malware and moved to quarantine.'
        : '[DEV] Your file has been flagged as malware and marked for quarantine.';
      
      await sendEmail(email, fileName, status, quarantineMessage, userName);
      console.log(`Malware detected in ${fileName}. Quarantine action taken and email sent to ${email}.`);
    } else {
      console.log(`File ${fileName} is clean. No action needed.`);
      await sendEmail(email, fileName, status, 'Your file has been scanned and is clean.', userName);
    }
  } catch (error) {
    console.error('Error during scan and quarantine handling:', error);
    const errorMessage = `An error occurred while processing your file: ${error.message}`;
    await updateScanStatus(fileName, 'Error', fileSize);
    await sendEmail(email, fileName, 'Error', errorMessage, userName);
    throw error; // Rethrow to be handled by the caller
  }
}