import fs from 'fs/promises';
import path from 'path';

const metadataDir = '/app/uploads';
const metadataPath = path.join(metadataDir, 'metadata.json');

async function ensureMetadataFileExists() {
  try {
    await fs.mkdir(metadataDir, { recursive: true });
    await fs.access(metadataPath);
  } catch (error) {
    if (error.code === 'ENOENT') {
      await fs.writeFile(metadataPath, JSON.stringify({}));
    } else {
      throw error;
    }
  }
}

async function readMetadata() {
  await ensureMetadataFileExists();
  const data = await fs.readFile(metadataPath, 'utf8');
  return JSON.parse(data);
}

async function writeMetadata(metadata) {
  await ensureMetadataFileExists();
  await fs.writeFile(metadataPath, JSON.stringify(metadata, null, 2));
}

export async function updateScanStatus(fileName, status, fileSize) {
  try {
    const metadata = await readMetadata();
    metadata[fileName] = { status, fileSize, lastScanned: new Date().toISOString() };
    await writeMetadata(metadata);
    console.log(`Metadata updated for ${fileName}`);
  } catch (error) {
    console.error('Error updating metadata:', error);
    throw error;
  }
}

export async function getScanStatus(fileName) {
  const metadata = await readMetadata();
  return metadata[fileName] || null;
}